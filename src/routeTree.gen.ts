/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PokemonIndexImport } from './routes/pokemon/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardPlaygroundIndexImport } from './routes/dashboard/playground/index'
import { Route as DashboardPlaygroundHistoryImport } from './routes/dashboard/playground/history'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PokemonIndexRoute = PokemonIndexImport.update({
  id: '/pokemon/',
  path: '/pokemon/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardPlaygroundIndexRoute = DashboardPlaygroundIndexImport.update({
  id: '/dashboard/playground/',
  path: '/dashboard/playground/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardPlaygroundHistoryRoute = DashboardPlaygroundHistoryImport.update(
  {
    id: '/dashboard/playground/history',
    path: '/dashboard/playground/history',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/pokemon/': {
      id: '/pokemon/'
      path: '/pokemon'
      fullPath: '/pokemon'
      preLoaderRoute: typeof PokemonIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/playground/history': {
      id: '/dashboard/playground/history'
      path: '/dashboard/playground/history'
      fullPath: '/dashboard/playground/history'
      preLoaderRoute: typeof DashboardPlaygroundHistoryImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/playground/': {
      id: '/dashboard/playground/'
      path: '/dashboard/playground'
      fullPath: '/dashboard/playground'
      preLoaderRoute: typeof DashboardPlaygroundIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardIndexRoute
  '/pokemon': typeof PokemonIndexRoute
  '/dashboard/playground/history': typeof DashboardPlaygroundHistoryRoute
  '/dashboard/playground': typeof DashboardPlaygroundIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardIndexRoute
  '/pokemon': typeof PokemonIndexRoute
  '/dashboard/playground/history': typeof DashboardPlaygroundHistoryRoute
  '/dashboard/playground': typeof DashboardPlaygroundIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/pokemon/': typeof PokemonIndexRoute
  '/dashboard/playground/history': typeof DashboardPlaygroundHistoryRoute
  '/dashboard/playground/': typeof DashboardPlaygroundIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/pokemon'
    | '/dashboard/playground/history'
    | '/dashboard/playground'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/pokemon'
    | '/dashboard/playground/history'
    | '/dashboard/playground'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/pokemon/'
    | '/dashboard/playground/history'
    | '/dashboard/playground/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  PokemonIndexRoute: typeof PokemonIndexRoute
  DashboardPlaygroundHistoryRoute: typeof DashboardPlaygroundHistoryRoute
  DashboardPlaygroundIndexRoute: typeof DashboardPlaygroundIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  PokemonIndexRoute: PokemonIndexRoute,
  DashboardPlaygroundHistoryRoute: DashboardPlaygroundHistoryRoute,
  DashboardPlaygroundIndexRoute: DashboardPlaygroundIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard/",
        "/pokemon/",
        "/dashboard/playground/history",
        "/dashboard/playground/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/pokemon/": {
      "filePath": "pokemon/index.tsx"
    },
    "/dashboard/playground/history": {
      "filePath": "dashboard/playground/history.tsx"
    },
    "/dashboard/playground/": {
      "filePath": "dashboard/playground/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
